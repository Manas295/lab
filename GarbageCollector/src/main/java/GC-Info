------------------Ways for requesting JVM to run Garbage Collector------------------------

-> Once we made object eligible for garbage collection, it may not destroy immediately by the garbage collector. 
   Whenever JVM runs the Garbage Collector program, then only the object will be destroyed. But when JVM runs 
   Garbage Collector, we can not expect.

-> We can also request JVM to run Garbage Collector. There are two ways to do it :
. Using System.gc() method : System class contain static method gc() for requesting JVM to run Garbage Collector.
. Using Runtime.getRuntime().gc() method : Runtime class allows the application to interface with the JVM in which 
  the application is running. Hence by using its gc() method, we can request JVM to run Garbage Collector.
  
  
-----------------Finalization-----------------
-> Just before destroying an object, Garbage Collector calls finalize() method on the object to perform cleanup activities. 
   Once finalize() method completes, Garbage Collector destroys that object.  

-> finalize() method is present in Object class with following prototype.
			protected void finalize() throws Throwable

Note :

-> The finalize() method called by Garbage Collector not JVM. Although Garbage Collector is one of the module of JVM.

-> Object class finalize() method has empty implementation, thus it is recommended to override finalize() method to 
   dispose of system resources or to perform other cleanup.

-> The finalize() method is never invoked more than once for any given object.

-> If an uncaught exception is thrown by the finalize() method, the exception is ignored and finalization of that object terminates.
	